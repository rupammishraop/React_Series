export class AuthService {

    client = new Client();
    account;

    constructor() {
        this.client
            .setEndpoint(config.appwriteUrl) // Your API Endpoint
            .setProject(config.appwriteProjectId) // Your project ID
        this.account = new Account(this.client);
    }

    async createAccount({ email, password, name }) {
        try {
            const userAccount = await this.account.create(ID.unique(), email, password, name);
            if (userAccount) {
                //login Method
                return this.login({ email, password });
            } else {
                return userAccount;
            }
        } catch (error) {
            throw error;
        }
    }

    async login ({email, password}){
        try {
           return await this.account.createEmailSession(email, password);
        } catch (error) {
            throw error;
        }
    }
   
    async getCurrentUser(){
        try {
            return await this.account.get();
        } catch (error) {
            console.log("Appwrite Error :: getCurrentUser :: error", error);
        }
    }

    async logout(){
        try {
            return  await this.account.deleteSessions();
        } catch (error) {
            console.log( "Appwrite Logout Error :: ", error );
        }
    }


}

const authservice = new AuthService();
export default authservice;